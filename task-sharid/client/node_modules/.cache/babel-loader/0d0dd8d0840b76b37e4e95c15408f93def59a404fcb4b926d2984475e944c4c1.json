{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\task-sharid\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Configure axios defaults\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Add request interceptor to include auth token\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle auth errors\naxios.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('user');\n      if (token && savedUser) {\n        try {\n          // Verify token is still valid\n          const response = await axios.get('/auth/me');\n          if (response.data.success) {\n            setUser(response.data.user);\n          } else {\n            // Token is invalid, clear storage\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n          }\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/auth/login', {\n        email,\n        password\n      });\n      if (response.data.success) {\n        const {\n          token,\n          user\n        } = response.data;\n\n        // Store token and user data\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        setUser(user);\n        toast.success('Login successful!');\n        return {\n          success: true\n        };\n      } else {\n        toast.error(response.data.message || 'Login failed');\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed. Please try again.';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (email, password, name) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/auth/register', {\n        email,\n        password,\n        name\n      });\n      if (response.data.success) {\n        toast.success('Registration successful! Please login.');\n        return {\n          success: true\n        };\n      } else {\n        toast.error(response.data.message || 'Registration failed');\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Registration failed. Please try again.';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      // Call logout endpoint (optional)\n      await axios.post('/auth/logout');\n    } catch (error) {\n      // Ignore errors on logout\n    } finally {\n      // Clear local storage and state\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n      toast.success('Logged out successfully');\n    }\n  };\n  const updateUser = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","defaults","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","AuthProvider","children","_s2","user","setUser","loading","setLoading","initializeAuth","savedUser","get","data","success","login","email","password","post","setItem","JSON","stringify","message","_error$response2","_error$response2$data","register","name","_error$response3","_error$response3$data","logout","updateUser","userData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/task-sharid/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Configure axios defaults\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Add request interceptor to include auth token\naxios.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor to handle auth errors\naxios.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('user');\n      \n      if (token && savedUser) {\n        try {\n          // Verify token is still valid\n          const response = await axios.get('/auth/me');\n          if (response.data.success) {\n            setUser(response.data.user);\n          } else {\n            // Token is invalid, clear storage\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n          }\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/auth/login', {\n        email,\n        password\n      });\n\n      if (response.data.success) {\n        const { token, user } = response.data;\n        \n        // Store token and user data\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        \n        setUser(user);\n        toast.success('Login successful!');\n        return { success: true };\n      } else {\n        toast.error(response.data.message || 'Login failed');\n        return { success: false, message: response.data.message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed. Please try again.';\n      toast.error(message);\n      return { success: false, message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (email, password, name) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/auth/register', {\n        email,\n        password,\n        name\n      });\n\n      if (response.data.success) {\n        toast.success('Registration successful! Please login.');\n        return { success: true };\n      } else {\n        toast.error(response.data.message || 'Registration failed');\n        return { success: false, message: response.data.message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed. Please try again.';\n      toast.error(message);\n      return { success: false, message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      // Call logout endpoint (optional)\n      await axios.post('/auth/logout');\n    } catch (error) {\n      // Ignore errors on logout\n    } finally {\n      // Clear local storage and state\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n      toast.success('Logged out successfully');\n    }\n  };\n\n  const updateUser = (userData) => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGV,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAD,EAAA,CARaD,OAAO;AASpBL,KAAK,CAACS,QAAQ,CAACC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAErF;AACAb,KAAK,CAACc,YAAY,CAACC,OAAO,CAACC,GAAG,CAC3BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAvB,KAAK,CAACc,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC5BU,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMU,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACwC,OAAO,EAAEC,UAAU,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMyC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMtB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMqB,SAAS,GAAGtB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAE9C,IAAIF,KAAK,IAAIuB,SAAS,EAAE;QACtB,IAAI;UACF;UACA,MAAMf,QAAQ,GAAG,MAAM1B,KAAK,CAAC0C,GAAG,CAAC,UAAU,CAAC;UAC5C,IAAIhB,QAAQ,CAACiB,IAAI,CAACC,OAAO,EAAE;YACzBP,OAAO,CAACX,QAAQ,CAACiB,IAAI,CAACP,IAAI,CAAC;UAC7B,CAAC,MAAM;YACL;YACAjB,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;YAChCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;UACjC;QACF,CAAC,CAAC,OAAON,KAAK,EAAE;UACd;UACAJ,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;UAChCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;QACjC;MACF;MACAU,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACFR,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMb,QAAQ,GAAG,MAAM1B,KAAK,CAACgD,IAAI,CAAC,aAAa,EAAE;QAC/CF,KAAK;QACLC;MACF,CAAC,CAAC;MAEF,IAAIrB,QAAQ,CAACiB,IAAI,CAACC,OAAO,EAAE;QACzB,MAAM;UAAE1B,KAAK;UAAEkB;QAAK,CAAC,GAAGV,QAAQ,CAACiB,IAAI;;QAErC;QACAxB,YAAY,CAAC8B,OAAO,CAAC,OAAO,EAAE/B,KAAK,CAAC;QACpCC,YAAY,CAAC8B,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACf,IAAI,CAAC,CAAC;QAElDC,OAAO,CAACD,IAAI,CAAC;QACbnC,KAAK,CAAC2C,OAAO,CAAC,mBAAmB,CAAC;QAClC,OAAO;UAAEA,OAAO,EAAE;QAAK,CAAC;MAC1B,CAAC,MAAM;QACL3C,KAAK,CAACsB,KAAK,CAACG,QAAQ,CAACiB,IAAI,CAACS,OAAO,IAAI,cAAc,CAAC;QACpD,OAAO;UAAER,OAAO,EAAE,KAAK;UAAEQ,OAAO,EAAE1B,QAAQ,CAACiB,IAAI,CAACS;QAAQ,CAAC;MAC3D;IACF,CAAC,CAAC,OAAO7B,KAAK,EAAE;MAAA,IAAA8B,gBAAA,EAAAC,qBAAA;MACd,MAAMF,OAAO,GAAG,EAAAC,gBAAA,GAAA9B,KAAK,CAACG,QAAQ,cAAA2B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBV,IAAI,cAAAW,qBAAA,uBAApBA,qBAAA,CAAsBF,OAAO,KAAI,iCAAiC;MAClFnD,KAAK,CAACsB,KAAK,CAAC6B,OAAO,CAAC;MACpB,OAAO;QAAER,OAAO,EAAE,KAAK;QAAEQ;MAAQ,CAAC;IACpC,CAAC,SAAS;MACRb,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMgB,QAAQ,GAAG,MAAAA,CAAOT,KAAK,EAAEC,QAAQ,EAAES,IAAI,KAAK;IAChD,IAAI;MACFjB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMb,QAAQ,GAAG,MAAM1B,KAAK,CAACgD,IAAI,CAAC,gBAAgB,EAAE;QAClDF,KAAK;QACLC,QAAQ;QACRS;MACF,CAAC,CAAC;MAEF,IAAI9B,QAAQ,CAACiB,IAAI,CAACC,OAAO,EAAE;QACzB3C,KAAK,CAAC2C,OAAO,CAAC,wCAAwC,CAAC;QACvD,OAAO;UAAEA,OAAO,EAAE;QAAK,CAAC;MAC1B,CAAC,MAAM;QACL3C,KAAK,CAACsB,KAAK,CAACG,QAAQ,CAACiB,IAAI,CAACS,OAAO,IAAI,qBAAqB,CAAC;QAC3D,OAAO;UAAER,OAAO,EAAE,KAAK;UAAEQ,OAAO,EAAE1B,QAAQ,CAACiB,IAAI,CAACS;QAAQ,CAAC;MAC3D;IACF,CAAC,CAAC,OAAO7B,KAAK,EAAE;MAAA,IAAAkC,gBAAA,EAAAC,qBAAA;MACd,MAAMN,OAAO,GAAG,EAAAK,gBAAA,GAAAlC,KAAK,CAACG,QAAQ,cAAA+B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBd,IAAI,cAAAe,qBAAA,uBAApBA,qBAAA,CAAsBN,OAAO,KAAI,wCAAwC;MACzFnD,KAAK,CAACsB,KAAK,CAAC6B,OAAO,CAAC;MACpB,OAAO;QAAER,OAAO,EAAE,KAAK;QAAEQ;MAAQ,CAAC;IACpC,CAAC,SAAS;MACRb,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMoB,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF;MACA,MAAM3D,KAAK,CAACgD,IAAI,CAAC,cAAc,CAAC;IAClC,CAAC,CAAC,OAAOzB,KAAK,EAAE;MACd;IAAA,CACD,SAAS;MACR;MACAJ,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;MAChCV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;MAC/BQ,OAAO,CAAC,IAAI,CAAC;MACbpC,KAAK,CAAC2C,OAAO,CAAC,yBAAyB,CAAC;IAC1C;EACF,CAAC;EAED,MAAMgB,UAAU,GAAIC,QAAQ,IAAK;IAC/BxB,OAAO,CAACwB,QAAQ,CAAC;IACjB1C,YAAY,CAAC8B,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACU,QAAQ,CAAC,CAAC;EACxD,CAAC;EAED,MAAMC,KAAK,GAAG;IACZ1B,IAAI;IACJE,OAAO;IACPO,KAAK;IACLU,QAAQ;IACRI,MAAM;IACNC;EACF,CAAC;EAED,oBACEzD,OAAA,CAACC,WAAW,CAAC2D,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA5B,QAAA,EAChCA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChC,GAAA,CA3HWF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}