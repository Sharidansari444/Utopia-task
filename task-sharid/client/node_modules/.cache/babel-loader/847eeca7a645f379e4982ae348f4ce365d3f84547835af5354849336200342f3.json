{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\task-sharid\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { authAPI } from '../se/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// API configuration is now handled in services/api.js\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('user');\n      if (token && savedUser) {\n        try {\n          // Verify token is still valid\n          const response = await authAPI.getCurrentUser();\n          if (response.success) {\n            setUser(response.user);\n          } else {\n            // Token is invalid, clear storage\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n          }\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await authAPI.login(email, password);\n      if (response.success) {\n        const {\n          token,\n          user\n        } = response;\n\n        // Store token and user data\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        setUser(user);\n        toast.success('Login successful!');\n        return {\n          success: true\n        };\n      } else {\n        toast.error(response.message || 'Login failed');\n        return {\n          success: false,\n          message: response.message\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please try again.';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (email, password, name) => {\n    try {\n      setLoading(true);\n      const response = await authAPI.register(email, password, name);\n      if (response.success) {\n        toast.success('Registration successful! Please login.');\n        return {\n          success: true\n        };\n      } else {\n        toast.error(response.message || 'Registration failed');\n        return {\n          success: false,\n          message: response.message\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed. Please try again.';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      // Call logout endpoint (optional)\n      await authAPI.logout();\n    } catch (error) {\n      // Ignore errors on logout\n    } finally {\n      // Clear local storage and state\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n      toast.success('Logged out successfully');\n    }\n  };\n  const updateUser = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","initializeAuth","token","localStorage","getItem","savedUser","response","getCurrentUser","success","removeItem","error","login","email","password","setItem","JSON","stringify","message","_error$response","_error$response$data","data","register","name","_error$response2","_error$response2$data","logout","updateUser","userData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/task-sharid/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { authAPI } from '../se/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// API configuration is now handled in services/api.js\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('user');\n      \n      if (token && savedUser) {\n        try {\n          // Verify token is still valid\n          const response = await authAPI.getCurrentUser();\n          if (response.success) {\n            setUser(response.user);\n          } else {\n            // Token is invalid, clear storage\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n          }\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await authAPI.login(email, password);\n\n      if (response.success) {\n        const { token, user } = response;\n        \n        // Store token and user data\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        \n        setUser(user);\n        toast.success('Login successful!');\n        return { success: true };\n      } else {\n        toast.error(response.message || 'Login failed');\n        return { success: false, message: response.message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed. Please try again.';\n      toast.error(message);\n      return { success: false, message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (email, password, name) => {\n    try {\n      setLoading(true);\n      const response = await authAPI.register(email, password, name);\n\n      if (response.success) {\n        toast.success('Registration successful! Please login.');\n        return { success: true };\n      } else {\n        toast.error(response.message || 'Registration failed');\n        return { success: false, message: response.message };\n      }\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed. Please try again.';\n      toast.error(message);\n      return { success: false, message };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      // Call logout endpoint (optional)\n      await authAPI.logout();\n    } catch (error) {\n      // Ignore errors on logout\n    } finally {\n      // Clear local storage and state\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n      toast.success('Logged out successfully');\n    }\n  };\n\n  const updateUser = (userData) => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}