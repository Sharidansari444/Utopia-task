{"ast":null,"code":"// services/api.js\nimport axios from 'axios';\n\n// Configure axios defaults\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || '/api';\n\n// Add request interceptor to include auth token\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Add response interceptor to handle auth errors\naxios.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// ---------------- AUTH API ----------------\nexport const authAPI = {\n  // Login user\n  login: async (email, password) => {\n    try {\n      var _data$success;\n      const {\n        data\n      } = await axios.post('/auth/login', {\n        email,\n        password\n      });\n      return {\n        success: (_data$success = data.success) !== null && _data$success !== void 0 ? _data$success : data.token && data.user ? true : false,\n        token: data.token,\n        user: data.user,\n        message: data.message\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed'\n      };\n    }\n  },\n  // Register user\n  register: async (email, password, name) => {\n    try {\n      var _data$success2;\n      const {\n        data\n      } = await axios.post('/auth/register', {\n        email,\n        password,\n        name\n      });\n      return {\n        success: (_data$success2 = data.success) !== null && _data$success2 !== void 0 ? _data$success2 : true,\n        message: data.message || 'Registration successful'\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        message: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Registration failed'\n      };\n    }\n  },\n  // Get current user\n  getCurrentUser: async () => {\n    try {\n      const {\n        data\n      } = await axios.get('/auth/me');\n      return {\n        success: true,\n        user: data.user\n      };\n    } catch {\n      return {\n        success: false,\n        message: 'Invalid or expired token'\n      };\n    }\n  },\n  // Logout user\n  logout: async () => {\n    try {\n      await axios.post('/auth/logout');\n      return {\n        success: true\n      };\n    } catch {\n      return {\n        success: false\n      };\n    }\n  }\n};\n\n// ---------------- DEVICES API ----------------\nexport const devicesAPI = {\n  getDevices: async (params = {}) => {\n    const response = await axios.get('/devices', {\n      params\n    });\n    return response.data;\n  },\n  getDevice: async id => {\n    const response = await axios.get(`/devices/${id}`);\n    return response.data;\n  },\n  getDeviceTelemetry: async (deviceId, params = {}) => {\n    const response = await axios.get(`/devices/${deviceId}/data`, {\n      params\n    });\n    return response.data;\n  },\n  createDevice: async deviceData => {\n    const response = await axios.post('/devices', deviceData);\n    return response.data;\n  },\n  updateDevice: async (id, deviceData) => {\n    const response = await axios.put(`/devices/${id}`, deviceData);\n    return response.data;\n  },\n  deleteDevice: async id => {\n    const response = await axios.delete(`/devices/${id}`);\n    return response.data;\n  },\n  getDeviceStats: async () => {\n    const response = await axios.get('/devices/stats/summary');\n    return response.data;\n  }\n};\n\n// ---------------- TELEMETRY API ----------------\nexport const telemetryAPI = {\n  getTelemetry: async (params = {}) => {\n    const response = await axios.get('/telemetry', {\n      params\n    });\n    return response.data;\n  },\n  getTelemetryByDevice: async (deviceId, params = {}) => {\n    const response = await axios.get(`/telemetry/device/${deviceId}`, {\n      params\n    });\n    return response.data;\n  },\n  createTelemetry: async telemetryData => {\n    const response = await axios.post('/telemetry', telemetryData);\n    return response.data;\n  },\n  getTelemetryStats: async (params = {}) => {\n    const response = await axios.get('/telemetry/stats', {\n      params\n    });\n    return response.data;\n  }\n};\n\n// ---------------- HEALTH API ----------------\nexport const healthAPI = {\n  checkHealth: async () => {\n    const response = await axios.get('/health');\n    return response.data;\n  }\n};\n\n// Export default axios instance for custom requests\nexport default axios;","map":{"version":3,"names":["axios","defaults","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","email","password","_data$success","data","post","success","user","message","_error$response2","_error$response2$data","register","name","_data$success2","_error$response3","_error$response3$data","getCurrentUser","get","logout","devicesAPI","getDevices","params","getDevice","id","getDeviceTelemetry","deviceId","createDevice","deviceData","updateDevice","put","deleteDevice","delete","getDeviceStats","telemetryAPI","getTelemetry","getTelemetryByDevice","createTelemetry","telemetryData","getTelemetryStats","healthAPI","checkHealth"],"sources":["C:/Users/Admin/Desktop/task-sharid/client/src/services/api.js"],"sourcesContent":["// services/api.js\nimport axios from 'axios';\n\n// Configure axios defaults\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || '/api';\n\n// Add request interceptor to include auth token\naxios.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Add response interceptor to handle auth errors\naxios.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// ---------------- AUTH API ----------------\nexport const authAPI = {\n  // Login user\n  login: async (email, password) => {\n    try {\n      const { data } = await axios.post('/auth/login', { email, password });\n\n      return {\n        success: data.success ?? (data.token && data.user ? true : false),\n        token: data.token,\n        user: data.user,\n        message: data.message\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Login failed'\n      };\n    }\n  },\n\n  // Register user\n  register: async (email, password, name) => {\n    try {\n      const { data } = await axios.post('/auth/register', { email, password, name });\n      return {\n        success: data.success ?? true,\n        message: data.message || 'Registration successful'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Registration failed'\n      };\n    }\n  },\n\n  // Get current user\n  getCurrentUser: async () => {\n    try {\n      const { data } = await axios.get('/auth/me');\n      return {\n        success: true,\n        user: data.user\n      };\n    } catch {\n      return {\n        success: false,\n        message: 'Invalid or expired token'\n      };\n    }\n  },\n\n  // Logout user\n  logout: async () => {\n    try {\n      await axios.post('/auth/logout');\n      return { success: true };\n    } catch {\n      return { success: false };\n    }\n  }\n};\n\n// ---------------- DEVICES API ----------------\nexport const devicesAPI = {\n  getDevices: async (params = {}) => {\n    const response = await axios.get('/devices', { params });\n    return response.data;\n  },\n  getDevice: async (id) => {\n    const response = await axios.get(`/devices/${id}`);\n    return response.data;\n  },\n  getDeviceTelemetry: async (deviceId, params = {}) => {\n    const response = await axios.get(`/devices/${deviceId}/data`, { params });\n    return response.data;\n  },\n  createDevice: async (deviceData) => {\n    const response = await axios.post('/devices', deviceData);\n    return response.data;\n  },\n  updateDevice: async (id, deviceData) => {\n    const response = await axios.put(`/devices/${id}`, deviceData);\n    return response.data;\n  },\n  deleteDevice: async (id) => {\n    const response = await axios.delete(`/devices/${id}`);\n    return response.data;\n  },\n  getDeviceStats: async () => {\n    const response = await axios.get('/devices/stats/summary');\n    return response.data;\n  }\n};\n\n// ---------------- TELEMETRY API ----------------\nexport const telemetryAPI = {\n  getTelemetry: async (params = {}) => {\n    const response = await axios.get('/telemetry', { params });\n    return response.data;\n  },\n  getTelemetryByDevice: async (deviceId, params = {}) => {\n    const response = await axios.get(`/telemetry/device/${deviceId}`, { params });\n    return response.data;\n  },\n  createTelemetry: async (telemetryData) => {\n    const response = await axios.post('/telemetry', telemetryData);\n    return response.data;\n  },\n  getTelemetryStats: async (params = {}) => {\n    const response = await axios.get('/telemetry/stats', { params });\n    return response.data;\n  }\n};\n\n// ---------------- HEALTH API ----------------\nexport const healthAPI = {\n  checkHealth: async () => {\n    const response = await axios.get('/health');\n    return response.data;\n  }\n};\n\n// Export default axios instance for custom requests\nexport default axios;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}